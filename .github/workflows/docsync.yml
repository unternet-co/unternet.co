name: Documentation Sync

on:
  # Run on pull requests to main
  pull_request:
    branches: [ main ]
  
  # Run on push to main (deployment)
  push:
    branches: [ main ]
  
  # Allow manual trigger
  workflow_dispatch:
  
  # Allow external repositories to trigger this
  repository_dispatch:
    types: [docs-updated]

jobs:
  docsync:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Need full history for git operations
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run docsync
      run: node scripts/docsync.js
    
    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit and push changes (on main branch)
      if: github.ref == 'refs/heads/main' && steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docs/
        git add _data/docsNavigation.json
        git commit -m "docs: sync external documentation [skip ci]"
        git push
    
    - name: Comment on PR (if changes detected)
      if: github.event_name == 'pull_request' && steps.verify-changed-files.outputs.changed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸ”„ Documentation sync detected changes. The docs will be updated when this PR is merged.'
          })
